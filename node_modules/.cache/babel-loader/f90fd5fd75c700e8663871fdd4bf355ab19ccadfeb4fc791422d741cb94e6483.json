{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport ButtonSection from './buttonSection';\nimport PlayerSection from './playerSection';\nimport ImageSection from './imageSection';\nimport MessageSection from './messageSection';\nimport ProfileSection from './profileSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io({\n  autoConnect: false\n});\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\nvar myGuess = \"\";\nconst ping = new Audio('ping.ogg');\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [textSection, setTextSection] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"before\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n  const [stats, setStats] = useState([]);\n\n  // player come online\n  const playerJoin = name => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name]);\n    // update player list on peers\n    socket.emit(\"player_join\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\", myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessages(previous => [...previous, data.name + \": \" + data.message]);\n  };\n  const updatePlayers = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\n      socket.emit(\"correct\", name);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\n      socket.emit(\"incorrect\", name);\n    }\n    setStatus(\"after\");\n    setImage(\"\");\n    setTimeout(start, 5000);\n  };\n  const updateScores = data => {\n    setScores(data);\n  };\n  const updateStats = data => {\n    setStats(data);\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"update_players\", updatePlayers);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n    socket.on(\"update_stats\", updateStats);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n      socket.off(\"update_scores\");\n      socket.off(\"update_stats\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container row mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col  order-sm-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textSection\",\n        children: textSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonSection, {\n        name: name,\n        playerJoin: playerJoin,\n        status: status,\n        start: start,\n        guess: guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerSection, {\n        name: name,\n        scores: scores,\n        stats: stats,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageSection, {\n        image: image,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageSection, {\n      name: name,\n      setMessage: setMessage,\n      sendMessage: sendMessage,\n      message: message,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileSection, {\n      name: name,\n      stats: stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NJnyNxCrmXslke6pZt5XcbzvRew=\");\n_c = App;\nexport default App;\n\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","ButtonSection","PlayerSection","ImageSection","MessageSection","ProfileSection","jsxDEV","_jsxDEV","socket","autoConnect","IS_PROD","process","env","NODE_ENV","URL","myGuess","ping","Audio","App","_s","message","setMessage","messages","setMessages","textSection","setTextSection","image","setImage","name","setName","status","setStatus","players","setPlayers","scores","setScores","stats","setStats","playerJoin","connect","previous","emit","start","guess","data","sendMessage","receiveMessage","updatePlayers","getRandomDreamD","dream","split","join","replace","allGuessed","answer","setTimeout","updateScores","updateStats","on","off","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\r\nimport { useEffect, useState} from \"react\";\r\nimport ButtonSection from './buttonSection';\r\nimport PlayerSection from './playerSection';\r\nimport ImageSection from './imageSection';\r\nimport MessageSection from './messageSection';\r\nimport ProfileSection from './profileSection';\r\nvar socket = io({ autoConnect: false });\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\r\n\r\nvar myGuess = \"\";\r\nconst ping = new Audio('ping.ogg');\r\n\r\nfunction App() {\r\n  // states\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [textSection, setTextSection] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"before\");\r\n  const [players, setPlayers] = useState([]); \r\n  const [scores, setScores] = useState([]);\r\n  const [stats, setStats] = useState([]);\r\n\r\n  // player come online\r\n  const playerJoin = (name) => {\r\n    // connect to server\r\n    socket = io.connect(URL);\r\n    // set name on user\r\n    setName(name);\r\n    // update player list on user\r\n    setPlayers(previous => [...previous, name])\r\n    // update player list on peers\r\n    socket.emit(\"player_join\", name);\r\n  };\r\n\r\n  // start round\r\n  const start = () => {\r\n    socket.emit(\"get_random_dream_u\");\r\n  };\r\n\r\n  // player guesses\r\n  const guess = (data) => {\r\n    myGuess = data;\r\n    socket.emit(\"guess\", myGuess);\r\n    setStatus(\"guessed\");\r\n  }\r\n\r\n  // send message to socket\r\n  const sendMessage = () => {\r\n    socket.emit(\"send_message\", { message, name });\r\n  }\r\n\r\n  // socket handlers -----------\r\n  const receiveMessage = (data) => {\r\n    setMessages(previous => [...previous, (data.name + \": \" + data.message)]);\r\n  }\r\n\r\n  const updatePlayers = (data) => {\r\n    setPlayers(previous => [...previous, data.data])\r\n  }\r\n\r\n  const getRandomDreamD = (data) => {\r\n    setTextSection(data.dream);\r\n    setStatus(\"during\");\r\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\r\n  }\r\n\r\n  // when all players guessed\r\n  const allGuessed = (answer) => {\r\n    if (answer === myGuess) {\r\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\r\n      socket.emit(\"correct\", name);\r\n    } else {\r\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\r\n      socket.emit(\"incorrect\", name);\r\n    }\r\n    setStatus(\"after\");\r\n    setImage(\"\");\r\n    setTimeout(start, 5000);\r\n  }\r\n\r\n  const updateScores = (data) => {\r\n    setScores(data);\r\n  }\r\n\r\n  const updateStats = (data) => {\r\n    setStats(data);\r\n  }\r\n\r\n  // receive from socket\r\n  useEffect(() => {\r\n\r\n    socket.on(\"receive_message\", receiveMessage);\r\n    socket.on(\"update_players\", updatePlayers);\r\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\r\n    socket.on(\"all_guessed\", allGuessed);\r\n    socket.on(\"update_scores\", updateScores);\r\n    socket.on(\"update_stats\", updateStats);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n      socket.off(\"player_join_d\");\r\n      socket.off(\"get_random_dream_d\");\r\n      socket.off(\"all_guessed\");\r\n      socket.off(\"update_scores\");\r\n      socket.off(\"update_stats\");\r\n    };\r\n\r\n  }, [socket]);\r\n\r\n  // display\r\n  return (\r\n    <div className=\"App container row mx-auto\">\r\n      \r\n      <div className='col  order-sm-2'>\r\n        <div id='textSection'>{textSection}</div>\r\n        <ButtonSection name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\r\n\r\n        <PlayerSection name={name} scores={scores} stats={stats} status={status}/>\r\n\r\n        <ImageSection image={image} status={status}/>\r\n\r\n      </div>\r\n\r\n      <MessageSection name={name} setMessage={setMessage} sendMessage={sendMessage} message={message} messages={messages}/>\r\n\r\n      <ProfileSection name={name} stats={stats}/>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}