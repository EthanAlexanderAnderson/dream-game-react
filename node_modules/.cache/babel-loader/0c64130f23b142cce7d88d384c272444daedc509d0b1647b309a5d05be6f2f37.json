{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport ButtonSection from './buttonSection';\nimport PlayerSection from './playerSection';\nimport ImageSection from './imageSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io({\n  autoConnect: false\n});\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"before\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = name => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name]);\n    // update player list on peers\n    socket.emit(\"player_join_u\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessageReceived(data.name + \": \" + data.message);\n  };\n  const playerJoinD = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n      socket.emit(\"increment_score\");\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n    setImage(\"\");\n  };\n  const updateScores = data => {\n    setScores(data);\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container w-60 text-center\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonSection, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerSection, {\n      name: name,\n      scores: scores,\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageSection, {\n      image: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lcepc4k8GxvjZWyt2l9N1VZy7XE=\");\n_c = App;\nexport default App;\n\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","ButtonSection","PlayerSection","ImageSection","jsxDEV","_jsxDEV","socket","autoConnect","IS_PROD","process","env","NODE_ENV","URL","myGuess","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","image","setImage","name","setName","status","setStatus","players","setPlayers","scores","setScores","playerJoin","connect","previous","emit","start","guess","data","console","log","sendMessage","receiveMessage","playerJoinD","getRandomDreamD","dream","dreamer","split","join","replace","allGuessed","answer","updateScores","on","off","className","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\r\nimport { useEffect, useState} from \"react\";\r\nimport ButtonSection from './buttonSection';\r\nimport PlayerSection from './playerSection';\r\nimport ImageSection from './imageSection';\r\nvar socket = io({ autoConnect: false });\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\r\n\r\nvar myGuess = \"\";\r\n\r\nfunction App() {\r\n  // states\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageReceived, setMessageReceived] = useState(\"\");\r\n  const [textSection, setTextSection] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"before\");\r\n  const [players, setPlayers] = useState([]);\r\n  const [scores, setScores] = useState([]);\r\n\r\n  // player come online\r\n  const playerJoin = (name) => {\r\n    // connect to server\r\n    socket = io.connect(URL);\r\n    // set name on user\r\n    setName(name);\r\n    // update player list on user\r\n    setPlayers(previous => [...previous, name])\r\n    // update player list on peers\r\n    socket.emit(\"player_join_u\", name);\r\n  };\r\n\r\n  // start round\r\n  const start = () => {\r\n    socket.emit(\"get_random_dream_u\");\r\n  };\r\n\r\n  // player guesses\r\n  const guess = (data) => {\r\n    myGuess = data;\r\n    socket.emit(\"guess\");\r\n    console.log(\"guesser: \" + name);\r\n    console.log(\"my guess: \" + myGuess);\r\n    setStatus(\"guessed\");\r\n  }\r\n\r\n  // send message to socket\r\n  const sendMessage = () => {\r\n    socket.emit(\"send_message\", { message, name });\r\n  }\r\n\r\n  // socket handlers -----------\r\n  const receiveMessage = (data) => {\r\n    setMessageReceived(data.name + \": \" + data.message);\r\n  }\r\n\r\n  const playerJoinD = (data) => {\r\n    setPlayers(previous => [...previous, data.data])\r\n  }\r\n\r\n  const getRandomDreamD = (data) => {\r\n    setTextSection(data.dream);\r\n    setStatus(\"during\");\r\n    console.log(\"dreamer: \" + data.dreamer);\r\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\r\n  }\r\n\r\n  // when all players guessed\r\n  const allGuessed = (answer) => {\r\n    if (answer === myGuess) {\r\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\r\n      socket.emit(\"increment_score\");\r\n    } else {\r\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\r\n    }\r\n    setStatus(\"after\");\r\n    setImage(\"\");\r\n  }\r\n\r\n  const updateScores = (data) => {\r\n    setScores(data);\r\n  }\r\n\r\n  // receive from socket\r\n  useEffect(() => {\r\n\r\n    socket.on(\"receive_message\", receiveMessage);\r\n    socket.on(\"player_join_d\", playerJoinD);\r\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\r\n    socket.on(\"all_guessed\", allGuessed);\r\n    socket.on(\"update_scores\", updateScores);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n      socket.off(\"player_join_d\");\r\n      socket.off(\"get_random_dream_d\");\r\n      socket.off(\"all_guessed\");\r\n    };\r\n\r\n  }, [socket]);\r\n\r\n  // display\r\n  return (\r\n    <div className=\"App container w-60 text-center\" style={{whiteSpace: `pre-line`}}>\r\n\r\n      <br></br>\r\n      <p>{textSection}</p>\r\n      <ButtonSection name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\r\n      <br></br>\r\n\r\n      <PlayerSection name={name} scores={scores} status={status}/>\r\n\r\n      <ImageSection image={image} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}