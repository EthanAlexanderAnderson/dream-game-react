{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Ethan/Desktop/Dream Game Site/v4/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Ethan/Desktop/Dream Game Site/v4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import io from'socket.io-client';import{useEffect,useState}from\"react\";import NameButtons from'./nameButtons';import PlayerSection from'./playerSection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io({autoConnect:false});var IS_PROD=process.env.NODE_ENV===\"production\";var URL=IS_PROD?\"http://www.ethananderson.ca/\":\"http://localhost:3001\";var myGuess=\"\";function App(){// states\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),messageReceived=_useState4[0],setMessageReceived=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),textSection=_useState6[0],setTextSection=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),imageSection=_useState8[0],setImageSection=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),name=_useState10[0],setName=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),status=_useState12[0],setStatus=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),players=_useState14[0],setPlayers=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),scores=_useState16[0],setScores=_useState16[1];// player come online\nvar playerJoin=function playerJoin(name){// connect to server\nsocket=io.connect(URL);// set name on user\nsetName(name);// update player list on user\nsetPlayers(function(previous){return[].concat(_toConsumableArray(previous),[name]);});// update player list on peers\nsocket.emit(\"player_join_u\",name);};// start round\nvar start=function start(){socket.emit(\"get_random_dream_u\");};// player guesses\nvar guess=function guess(data){myGuess=data;socket.emit(\"guess\");console.log(\"guesser: \"+name);console.log(\"my guess: \"+myGuess);setStatus(\"guessed\");};// send message to socket\nvar sendMessage=function sendMessage(){socket.emit(\"send_message\",{message:message,name:name});};// socket handlers -----------\nvar receiveMessage=function receiveMessage(data){setMessageReceived(data.name+\": \"+data.message);};var playerJoinD=function playerJoinD(data){setPlayers(function(previous){return[].concat(_toConsumableArray(previous),[data.data]);});};var getRandomDreamD=function getRandomDreamD(data){setTextSection(data.dream);setStatus(\"during\");console.log(\"dreamer: \"+data.dreamer);var link=data.dream.split(\" \").join(\"_\");setImageSection(\"https://image.pollinations.ai/prompt/\"+link);};// when all players guessed\nvar allGuessed=function allGuessed(answer){if(answer===myGuess){setTextSection(\"CORRECT\\nANSWER: \"+answer+\"\\nYou guessed: \"+myGuess);socket.emit(\"increment_score\");}else{setTextSection(\"INCORRECT\\nANSWER: \"+answer+\"\\nYou guessed: \"+myGuess);}setStatus(\"after\");};var updateScores=function updateScores(data){setScores(data);};// receive from socket\nuseEffect(function(){socket.on(\"receive_message\",receiveMessage);socket.on(\"player_join_d\",playerJoinD);socket.on(\"get_random_dream_d\",getRandomDreamD);socket.on(\"all_guessed\",allGuessed);socket.on(\"update_scores\",updateScores);return function(){socket.off(\"receive_message\");socket.off(\"player_join_d\");socket.off(\"get_random_dream_d\");socket.off(\"all_guessed\");};},[socket]);// display\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App container w-60 text-center\",style:{whiteSpace:\"pre-line\"},children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:textSection}),/*#__PURE__*/_jsx(NameButtons,{name:name,playerJoin:playerJoin,status:status,start:start,guess:guess}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(PlayerSection,{name:name,scores:scores}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:imageSection,alt:\"\"})})]});}export default App;/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/","map":{"version":3,"names":["io","useEffect","useState","NameButtons","PlayerSection","jsx","_jsx","jsxs","_jsxs","socket","autoConnect","IS_PROD","process","env","NODE_ENV","URL","myGuess","App","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","messageReceived","setMessageReceived","_useState5","_useState6","textSection","setTextSection","_useState7","_useState8","imageSection","setImageSection","_useState9","_useState10","name","setName","_useState11","_useState12","status","setStatus","_useState13","_useState14","players","setPlayers","_useState15","_useState16","scores","setScores","playerJoin","connect","previous","concat","_toConsumableArray","emit","start","guess","data","console","log","sendMessage","receiveMessage","playerJoinD","getRandomDreamD","dream","dreamer","link","split","join","allGuessed","answer","updateScores","on","off","className","style","whiteSpace","children","src","alt"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nimport PlayerSection from './playerSection';\nvar socket = io({ autoConnect: false });\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\n\nvar myGuess = \"\";\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = (name) => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name])\n    // update player list on peers\n    socket.emit(\"player_join_u\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  // socket handlers -----------\n  const receiveMessage = (data) => {\n    setMessageReceived(data.name + \": \" + data.message);\n  }\n\n  const playerJoinD = (data) => {\n    setPlayers(previous => [...previous, data.data])\n  }\n\n  const getRandomDreamD = (data) => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\"+link);\n  }\n\n  // when all players guessed\n  const allGuessed = (answer) => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n      socket.emit(\"increment_score\");\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  }\n\n  const updateScores = (data) => {\n    setScores(data);\n  }\n\n  // receive from socket\n  useEffect(() => {\n\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App container w-60 text-center\" style={{whiteSpace: `pre-line`}}>\n\n      <br></br>\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <PlayerSection name={name} scores={scores} />\n      <div>\n        <img src={imageSection} alt=\"\"></img>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}