{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport NameButtons from './nameButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  let dreamer = \"\";\n\n  // player come online\n  const playerJoin = data => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data]);\n    // update player list on peers\n    socket.emit(\"player_join_u\", {\n      data\n    });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessageReceived(data.name + \": \" + data.message);\n  };\n  const playerJoinD = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    dreamer = data.dreamer;\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\" + link);\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  };\n  const updateScores = scores => {\n    const listItems = Array.from(scores).map(_ref => {\n      let [key, value] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [key, \": \", value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameButtons, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: players.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          columns: 2\n        },\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSection,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UU4O+Sv1chpkjQEM5Wsm06k2OLQ=\");\n_c = App;\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","NameButtons","jsxDEV","_jsxDEV","socket","connect","myGuess","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","imageSection","setImageSection","name","setName","status","setStatus","players","setPlayers","dreamer","playerJoin","data","previous","emit","start","guess","console","log","sendMessage","receiveMessage","playerJoinD","getRandomDreamD","dream","link","split","join","allGuessed","answer","updateScores","scores","listItems","Array","from","map","_ref","key","value","children","fileName","_jsxFileName","lineNumber","columnNumber","on","off","className","style","whiteSpace","item","columns","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nconst socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  let dreamer = \"\";\n\n  // player come online\n  const playerJoin = (data) => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data])\n    // update player list on peers\n    socket.emit(\"player_join_u\", { data });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  // socket handlers -----------\n  const receiveMessage = (data) => {\n    setMessageReceived(data.name + \": \" + data.message);\n  }\n\n  const playerJoinD = (data) => {\n    setPlayers(previous => [...previous, data.data])\n  }\n\n  const getRandomDreamD = (data) => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    dreamer = data.dreamer;\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\"+link);\n  }\n\n  // when all players guessed\n  const allGuessed = (answer) => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  }\n\n  const updateScores = (scores) => {\n    const listItems = Array.from(scores).map(([key, value]) =>\n      <li key={key}>{key}: {value}</li>\n    );\n  }\n\n  // receive from socket\n  useEffect(() => {\n\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App\" style={{whiteSpace: `pre-line`}}>\n\n      <h1>Name: {name}</h1>\n      <br></br>\n\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n      <div>\n        <ul style={{ columns: 2 }}>{listItems}</ul>\n      </div>\n      <div>\n        <img src={imageSection} alt=\"\"></img>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}