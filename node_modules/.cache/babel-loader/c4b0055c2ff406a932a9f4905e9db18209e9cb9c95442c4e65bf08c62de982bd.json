{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst commands_1 = require(\"@ioredis/commands\");\nconst autoPipelining_1 = require(\"../autoPipelining\");\nconst Command_1 = require(\"../Command\");\nconst Script_1 = require(\"../Script\");\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Commander {\n  constructor() {\n    this.options = {};\n    /**\n     * @ignore\n     */\n    this.scriptsSet = {};\n    /**\n     * @ignore\n     */\n    this.addedBuiltinSet = new Set();\n  }\n  /**\n   * Return supported builtin commands\n   */\n  getBuiltinCommands() {\n    return commands.slice(0);\n  }\n  /**\n   * Create a builtin command\n   */\n  createBuiltinCommand(commandName) {\n    return {\n      string: generateFunction(null, commandName, \"utf8\"),\n      buffer: generateFunction(null, commandName, null)\n    };\n  }\n  /**\n   * Create add builtin command\n   */\n  addBuiltinCommand(commandName) {\n    this.addedBuiltinSet.add(commandName);\n    this[commandName] = generateFunction(commandName, commandName, \"utf8\");\n    this[commandName + \"Buffer\"] = generateFunction(commandName + \"Buffer\", commandName, null);\n  }\n  /**\n   * Define a custom command using lua script\n   */\n  defineCommand(name, definition) {\n    const script = new Script_1.default(definition.lua, definition.numberOfKeys, this.options.keyPrefix, definition.readOnly);\n    this.scriptsSet[name] = script;\n    this[name] = generateScriptingFunction(name, name, script, \"utf8\");\n    this[name + \"Buffer\"] = generateScriptingFunction(name + \"Buffer\", name, script, null);\n  }\n  /**\n   * @ignore\n   */\n  sendCommand(command, stream, node) {\n    throw new Error('\"sendCommand\" is not implemented');\n  }\n}\nconst commands = commands_1.list.filter(command => command !== \"monitor\");\ncommands.push(\"sentinel\");\ncommands.forEach(function (commandName) {\n  Commander.prototype[commandName] = generateFunction(commandName, commandName, \"utf8\");\n  Commander.prototype[commandName + \"Buffer\"] = generateFunction(commandName + \"Buffer\", commandName, null);\n});\nCommander.prototype.call = generateFunction(\"call\", \"utf8\");\nCommander.prototype.callBuffer = generateFunction(\"callBuffer\", null);\n// @ts-expect-error\nCommander.prototype.send_command = Commander.prototype.call;\nfunction generateFunction(functionName, _commandName, _encoding) {\n  if (typeof _encoding === \"undefined\") {\n    _encoding = _commandName;\n    _commandName = null;\n  }\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const commandName = _commandName || args.shift();\n    let callback = args[args.length - 1];\n    if (typeof callback === \"function\") {\n      args.pop();\n    } else {\n      callback = undefined;\n    }\n    const options = {\n      errorStack: this.options.showFriendlyErrorStack ? new Error() : undefined,\n      keyPrefix: this.options.keyPrefix,\n      replyEncoding: _encoding\n    };\n    // No auto pipeline, use regular command sending\n    if (!(0, autoPipelining_1.shouldUseAutoPipelining)(this, functionName, commandName)) {\n      return this.sendCommand(\n      // @ts-expect-error\n      new Command_1.default(commandName, args, options, callback));\n    }\n    // Create a new pipeline and make sure it's scheduled\n    return (0, autoPipelining_1.executeWithAutoPipelining)(this, functionName, commandName,\n    // @ts-expect-error\n    args, callback);\n  };\n}\nfunction generateScriptingFunction(functionName, commandName, script, encoding) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const callback = typeof args[args.length - 1] === \"function\" ? args.pop() : undefined;\n    const options = {\n      replyEncoding: encoding\n    };\n    if (this.options.showFriendlyErrorStack) {\n      options.errorStack = new Error();\n    }\n    // No auto pipeline, use regular command sending\n    if (!(0, autoPipelining_1.shouldUseAutoPipelining)(this, functionName, commandName)) {\n      return script.execute(this, args, options, callback);\n    }\n    // Create a new pipeline and make sure it's scheduled\n    return (0, autoPipelining_1.executeWithAutoPipelining)(this, functionName, commandName, args, callback);\n  };\n}\nexports.default = Commander;","map":{"version":3,"names":["Object","defineProperty","exports","value","commands_1","require","autoPipelining_1","Command_1","Script_1","Commander","constructor","options","scriptsSet","addedBuiltinSet","Set","getBuiltinCommands","commands","slice","createBuiltinCommand","commandName","string","generateFunction","buffer","addBuiltinCommand","add","defineCommand","name","definition","script","default","lua","numberOfKeys","keyPrefix","readOnly","generateScriptingFunction","sendCommand","command","stream","node","Error","list","filter","push","forEach","prototype","call","callBuffer","send_command","functionName","_commandName","_encoding","_len","arguments","length","args","Array","_key","shift","callback","pop","undefined","errorStack","showFriendlyErrorStack","replyEncoding","shouldUseAutoPipelining","executeWithAutoPipelining","encoding","_len2","_key2","execute"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/client/node_modules/ioredis/built/utils/Commander.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commands_1 = require(\"@ioredis/commands\");\nconst autoPipelining_1 = require(\"../autoPipelining\");\nconst Command_1 = require(\"../Command\");\nconst Script_1 = require(\"../Script\");\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Commander {\n    constructor() {\n        this.options = {};\n        /**\n         * @ignore\n         */\n        this.scriptsSet = {};\n        /**\n         * @ignore\n         */\n        this.addedBuiltinSet = new Set();\n    }\n    /**\n     * Return supported builtin commands\n     */\n    getBuiltinCommands() {\n        return commands.slice(0);\n    }\n    /**\n     * Create a builtin command\n     */\n    createBuiltinCommand(commandName) {\n        return {\n            string: generateFunction(null, commandName, \"utf8\"),\n            buffer: generateFunction(null, commandName, null),\n        };\n    }\n    /**\n     * Create add builtin command\n     */\n    addBuiltinCommand(commandName) {\n        this.addedBuiltinSet.add(commandName);\n        this[commandName] = generateFunction(commandName, commandName, \"utf8\");\n        this[commandName + \"Buffer\"] = generateFunction(commandName + \"Buffer\", commandName, null);\n    }\n    /**\n     * Define a custom command using lua script\n     */\n    defineCommand(name, definition) {\n        const script = new Script_1.default(definition.lua, definition.numberOfKeys, this.options.keyPrefix, definition.readOnly);\n        this.scriptsSet[name] = script;\n        this[name] = generateScriptingFunction(name, name, script, \"utf8\");\n        this[name + \"Buffer\"] = generateScriptingFunction(name + \"Buffer\", name, script, null);\n    }\n    /**\n     * @ignore\n     */\n    sendCommand(command, stream, node) {\n        throw new Error('\"sendCommand\" is not implemented');\n    }\n}\nconst commands = commands_1.list.filter((command) => command !== \"monitor\");\ncommands.push(\"sentinel\");\ncommands.forEach(function (commandName) {\n    Commander.prototype[commandName] = generateFunction(commandName, commandName, \"utf8\");\n    Commander.prototype[commandName + \"Buffer\"] = generateFunction(commandName + \"Buffer\", commandName, null);\n});\nCommander.prototype.call = generateFunction(\"call\", \"utf8\");\nCommander.prototype.callBuffer = generateFunction(\"callBuffer\", null);\n// @ts-expect-error\nCommander.prototype.send_command = Commander.prototype.call;\nfunction generateFunction(functionName, _commandName, _encoding) {\n    if (typeof _encoding === \"undefined\") {\n        _encoding = _commandName;\n        _commandName = null;\n    }\n    return function (...args) {\n        const commandName = (_commandName || args.shift());\n        let callback = args[args.length - 1];\n        if (typeof callback === \"function\") {\n            args.pop();\n        }\n        else {\n            callback = undefined;\n        }\n        const options = {\n            errorStack: this.options.showFriendlyErrorStack ? new Error() : undefined,\n            keyPrefix: this.options.keyPrefix,\n            replyEncoding: _encoding,\n        };\n        // No auto pipeline, use regular command sending\n        if (!(0, autoPipelining_1.shouldUseAutoPipelining)(this, functionName, commandName)) {\n            return this.sendCommand(\n            // @ts-expect-error\n            new Command_1.default(commandName, args, options, callback));\n        }\n        // Create a new pipeline and make sure it's scheduled\n        return (0, autoPipelining_1.executeWithAutoPipelining)(this, functionName, commandName, \n        // @ts-expect-error\n        args, callback);\n    };\n}\nfunction generateScriptingFunction(functionName, commandName, script, encoding) {\n    return function (...args) {\n        const callback = typeof args[args.length - 1] === \"function\" ? args.pop() : undefined;\n        const options = {\n            replyEncoding: encoding,\n        };\n        if (this.options.showFriendlyErrorStack) {\n            options.errorStack = new Error();\n        }\n        // No auto pipeline, use regular command sending\n        if (!(0, autoPipelining_1.shouldUseAutoPipelining)(this, functionName, commandName)) {\n            return script.execute(this, args, options, callback);\n        }\n        // Create a new pipeline and make sure it's scheduled\n        return (0, autoPipelining_1.executeWithAutoPipelining)(this, functionName, commandName, args, callback);\n    };\n}\nexports.default = Commander;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}