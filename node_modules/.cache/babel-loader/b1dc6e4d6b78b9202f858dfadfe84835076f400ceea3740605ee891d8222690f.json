{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport NameButtons from './nameButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  let dreamer = \"\";\n\n  // player come online\n  const playerJoin = data => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data]);\n    // update player list on peers\n    socket.emit(\"player_join_u\", {\n      data\n    });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\", myGuess);\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    var message = data.message;\n    var name = data.name;\n    setMessageReceived(name + \": \" + message);\n  };\n  const playerJoinD = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n\n  // when all players guessed\n  const allGuessed = data => {\n    if (data.redisResult === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + data.redisResult + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + data.redisResult + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  };\n\n  // receive from socket\n  useEffect(myGuess => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", data => {\n      setTextSection(data.dream);\n      setStatus(\"during\");\n      dreamer = data.dreamer;\n      console.log(\"dreamer: \" + data.dreamer);\n    });\n    socket.on(\"all_guessed\", allGuessed);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameButtons, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: players.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dreamer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DIVwPputYFDHoQSeJ1XQ30ypEBE=\");\n_c = App;\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","NameButtons","jsxDEV","_jsxDEV","socket","connect","myGuess","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","name","setName","status","setStatus","players","setPlayers","dreamer","playerJoin","data","previous","emit","start","guess","console","log","sendMessage","receiveMessage","playerJoinD","allGuessed","redisResult","on","dream","off","className","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nconst socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  let dreamer = \"\";\n\n  // player come online\n  const playerJoin = (data) => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data])\n    // update player list on peers\n    socket.emit(\"player_join_u\", { data });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    myGuess = data;\n    socket.emit(\"guess\", myGuess);\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  // socket handlers -----------\n  const receiveMessage = (data) => {\n    var message = data.message;\n    var name = data.name;\n    setMessageReceived(name + \": \" + message);\n  }\n\n  const playerJoinD = (data) => {\n    setPlayers(previous => [...previous, data.data])\n  }\n\n  // when all players guessed\n  const allGuessed = (data) => {\n    if (data.redisResult === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + data.redisResult + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + data.redisResult + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  }\n\n  // receive from socket\n  useEffect(( myGuess ) => {\n\n    socket.on(\"receive_message\", receiveMessage);\n\n    socket.on(\"player_join_d\", playerJoinD);\n\n    socket.on(\"get_random_dream_d\", (data) => {\n      setTextSection(data.dream);\n      setStatus(\"during\");\n      dreamer = data.dreamer;\n      console.log(\"dreamer: \" + data.dreamer);\n    });\n\n    socket.on(\"all_guessed\", allGuessed);\n\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App\" style={{whiteSpace: `pre-line`}}>\n\n      <h1>Name: {name}</h1>\n      <br></br>\n\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n      <h1>{dreamer}</h1>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}