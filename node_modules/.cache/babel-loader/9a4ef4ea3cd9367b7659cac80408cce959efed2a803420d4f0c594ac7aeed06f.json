{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport NameButtons from './nameButtons';\nimport PlayerSection from './playerSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io({\n  autoConnect: false\n});\n//const socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = name => {\n    // connect to server\n    socket = io.connect(\"http://localhost:3001\");\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name]);\n    // update player list on peers\n    console.log(socket.id);\n    const id = socket.id;\n    socket.emit(\"player_join_u\", {\n      id,\n      name\n    });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessageReceived(data.name + \": \" + data.message);\n  };\n  const playerJoinD = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\" + link);\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  };\n  const updateScores = data => {\n    setScores(data);\n    console.log(scores);\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container w-60 text-center\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameButtons, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerSection, {\n      scores: scores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSection,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GQ/R+OJ9VSkhUTNXWZkPDAzJb1I=\");\n_c = App;\nexport default App;\n\n/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","NameButtons","PlayerSection","jsxDEV","_jsxDEV","socket","autoConnect","myGuess","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","imageSection","setImageSection","name","setName","status","setStatus","players","setPlayers","scores","setScores","playerJoin","connect","previous","console","log","id","emit","start","guess","data","sendMessage","receiveMessage","playerJoinD","getRandomDreamD","dream","dreamer","link","split","join","allGuessed","answer","updateScores","on","off","className","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nimport PlayerSection from './playerSection';\nvar socket = io({ autoConnect: false });\n//const socket = io.connect(\"http://localhost:3001\"); // FOR LOCAL\n//const socket = io.connect(\"http://www.ethananderson.ca/\"); // FOR PROD\nvar myGuess = \"\";\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = (name) => {\n    // connect to server\n    socket = io.connect(\"http://localhost:3001\");\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name])\n    // update player list on peers\n    console.log(socket.id);\n    const id = socket.id;\n    socket.emit(\"player_join_u\", { id, name });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  // socket handlers -----------\n  const receiveMessage = (data) => {\n    setMessageReceived(data.name + \": \" + data.message);\n  }\n\n  const playerJoinD = (data) => {\n    setPlayers(previous => [...previous, data.data])\n  }\n\n  const getRandomDreamD = (data) => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\"+link);\n  }\n\n  // when all players guessed\n  const allGuessed = (answer) => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  }\n\n  const updateScores = (data) => {\n    setScores(data);\n    console.log(scores);\n  }\n\n  // receive from socket\n  useEffect(() => {\n\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App container w-60 text-center\" style={{whiteSpace: `pre-line`}}>\n\n      <h1>Name: {name}</h1>\n      <br></br>\n\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <PlayerSection scores={scores} />\n      <div>\n        <img src={imageSection} alt=\"\"></img>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}