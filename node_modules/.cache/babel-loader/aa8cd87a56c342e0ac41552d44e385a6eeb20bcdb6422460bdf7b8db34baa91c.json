{"ast":null,"code":"'use strict';\n\n// hgetall converts its replies to an Object. If the reply is empty, null is returned.\n// These function are only called with internal data and have therefore always the same instanceof X\nfunction replyToObject(reply) {\n  // The reply might be a string or a buffer if this is called in a transaction (multi)\n  if (reply.length === 0 || !(reply instanceof Array)) {\n    return null;\n  }\n  var obj = {};\n  for (var i = 0; i < reply.length; i += 2) {\n    obj[reply[i].toString('binary')] = reply[i + 1];\n  }\n  return obj;\n}\nfunction replyToStrings(reply) {\n  if (reply instanceof Buffer) {\n    return reply.toString();\n  }\n  if (reply instanceof Array) {\n    var res = new Array(reply.length);\n    for (var i = 0; i < reply.length; i++) {\n      // Recusivly call the function as slowlog returns deep nested replies\n      res[i] = replyToStrings(reply[i]);\n    }\n    return res;\n  }\n  return reply;\n}\nfunction print(err, reply) {\n  if (err) {\n    // A error always begins with Error:\n    console.log(err.toString());\n  } else {\n    console.log('Reply: ' + reply);\n  }\n}\nvar camelCase;\n// Deep clone arbitrary objects with arrays. Can't handle cyclic structures (results in a range error)\n// Any attribute with a non primitive value besides object and array will be passed by reference (e.g. Buffers, Maps, Functions)\n// All capital letters are going to be replaced with a lower case letter and a underscore infront of it\nfunction clone(obj) {\n  var copy;\n  if (Array.isArray(obj)) {\n    copy = new Array(obj.length);\n    for (var i = 0; i < obj.length; i++) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n  if (Object.prototype.toString.call(obj) === '[object Object]') {\n    copy = {};\n    var elems = Object.keys(obj);\n    var elem;\n    while (elem = elems.pop()) {\n      if (elem === 'tls') {\n        // special handle tls\n        copy[elem] = obj[elem];\n        continue;\n      }\n      // Accept camelCase options and convert them to snake_case\n      var snake_case = elem.replace(/[A-Z][^A-Z]/g, '_$&').toLowerCase();\n      // If camelCase is detected, pass it to the client, so all variables are going to be camelCased\n      // There are no deep nested options objects yet, but let's handle this future proof\n      if (snake_case !== elem.toLowerCase()) {\n        camelCase = true;\n      }\n      copy[snake_case] = clone(obj[elem]);\n    }\n    return copy;\n  }\n  return obj;\n}\nfunction convenienceClone(obj) {\n  camelCase = false;\n  obj = clone(obj) || {};\n  if (camelCase) {\n    obj.camel_case = true;\n  }\n  return obj;\n}\nfunction callbackOrEmit(self, callback, err, res) {\n  if (callback) {\n    callback(err, res);\n  } else if (err) {\n    self.emit('error', err);\n  }\n}\nfunction replyInOrder(self, callback, err, res, queue) {\n  // If the queue is explicitly passed, use that, otherwise fall back to the offline queue first,\n  // as there might be commands in both queues at the same time\n  var command_obj;\n  /* istanbul ignore if: TODO: Remove this as soon as we test Redis 3.2 on travis */\n  if (queue) {\n    command_obj = queue.peekBack();\n  } else {\n    command_obj = self.offline_queue.peekBack() || self.command_queue.peekBack();\n  }\n  if (!command_obj) {\n    process.nextTick(function () {\n      callbackOrEmit(self, callback, err, res);\n    });\n  } else {\n    var tmp = command_obj.callback;\n    command_obj.callback = tmp ? function (e, r) {\n      tmp(e, r);\n      callbackOrEmit(self, callback, err, res);\n    } : function (e, r) {\n      if (e) {\n        self.emit('error', e);\n      }\n      callbackOrEmit(self, callback, err, res);\n    };\n  }\n}\nmodule.exports = {\n  reply_to_strings: replyToStrings,\n  reply_to_object: replyToObject,\n  print: print,\n  err_code: /^([A-Z]+)\\s+(.+)$/,\n  monitor_regex: /^[0-9]{10,11}\\.[0-9]+ \\[[0-9]+ .+\\].*\"$/,\n  clone: convenienceClone,\n  callback_or_emit: callbackOrEmit,\n  reply_in_order: replyInOrder\n};","map":{"version":3,"names":["replyToObject","reply","length","Array","obj","i","toString","replyToStrings","Buffer","res","print","err","console","log","camelCase","clone","copy","isArray","Object","prototype","call","elems","keys","elem","pop","snake_case","replace","toLowerCase","convenienceClone","camel_case","callbackOrEmit","self","callback","emit","replyInOrder","queue","command_obj","peekBack","offline_queue","command_queue","process","nextTick","tmp","e","r","module","exports","reply_to_strings","reply_to_object","err_code","monitor_regex","callback_or_emit","reply_in_order"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/client/node_modules/redis/lib/utils.js"],"sourcesContent":["'use strict';\n\n// hgetall converts its replies to an Object. If the reply is empty, null is returned.\n// These function are only called with internal data and have therefore always the same instanceof X\nfunction replyToObject (reply) {\n    // The reply might be a string or a buffer if this is called in a transaction (multi)\n    if (reply.length === 0 || !(reply instanceof Array)) {\n        return null;\n    }\n    var obj = {};\n    for (var i = 0; i < reply.length; i += 2) {\n        obj[reply[i].toString('binary')] = reply[i + 1];\n    }\n    return obj;\n}\n\nfunction replyToStrings (reply) {\n    if (reply instanceof Buffer) {\n        return reply.toString();\n    }\n    if (reply instanceof Array) {\n        var res = new Array(reply.length);\n        for (var i = 0; i < reply.length; i++) {\n            // Recusivly call the function as slowlog returns deep nested replies\n            res[i] = replyToStrings(reply[i]);\n        }\n        return res;\n    }\n\n    return reply;\n}\n\nfunction print (err, reply) {\n    if (err) {\n        // A error always begins with Error:\n        console.log(err.toString());\n    } else {\n        console.log('Reply: ' + reply);\n    }\n}\n\nvar camelCase;\n// Deep clone arbitrary objects with arrays. Can't handle cyclic structures (results in a range error)\n// Any attribute with a non primitive value besides object and array will be passed by reference (e.g. Buffers, Maps, Functions)\n// All capital letters are going to be replaced with a lower case letter and a underscore infront of it\nfunction clone (obj) {\n    var copy;\n    if (Array.isArray(obj)) {\n        copy = new Array(obj.length);\n        for (var i = 0; i < obj.length; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    if (Object.prototype.toString.call(obj) === '[object Object]') {\n        copy = {};\n        var elems = Object.keys(obj);\n        var elem;\n        while (elem = elems.pop()) {\n            if (elem === 'tls') { // special handle tls\n                copy[elem] = obj[elem];\n                continue;\n            }\n            // Accept camelCase options and convert them to snake_case\n            var snake_case = elem.replace(/[A-Z][^A-Z]/g, '_$&').toLowerCase();\n            // If camelCase is detected, pass it to the client, so all variables are going to be camelCased\n            // There are no deep nested options objects yet, but let's handle this future proof\n            if (snake_case !== elem.toLowerCase()) {\n                camelCase = true;\n            }\n            copy[snake_case] = clone(obj[elem]);\n        }\n        return copy;\n    }\n    return obj;\n}\n\nfunction convenienceClone (obj) {\n    camelCase = false;\n    obj = clone(obj) || {};\n    if (camelCase) {\n        obj.camel_case = true;\n    }\n    return obj;\n}\n\nfunction callbackOrEmit (self, callback, err, res) {\n    if (callback) {\n        callback(err, res);\n    } else if (err) {\n        self.emit('error', err);\n    }\n}\n\nfunction replyInOrder (self, callback, err, res, queue) {\n    // If the queue is explicitly passed, use that, otherwise fall back to the offline queue first,\n    // as there might be commands in both queues at the same time\n    var command_obj;\n    /* istanbul ignore if: TODO: Remove this as soon as we test Redis 3.2 on travis */\n    if (queue) {\n        command_obj = queue.peekBack();\n    } else {\n        command_obj = self.offline_queue.peekBack() || self.command_queue.peekBack();\n    }\n    if (!command_obj) {\n        process.nextTick(function () {\n            callbackOrEmit(self, callback, err, res);\n        });\n    } else {\n        var tmp = command_obj.callback;\n        command_obj.callback = tmp ?\n            function (e, r) {\n                tmp(e, r);\n                callbackOrEmit(self, callback, err, res);\n            } :\n            function (e, r) {\n                if (e) {\n                    self.emit('error', e);\n                }\n                callbackOrEmit(self, callback, err, res);\n            };\n    }\n}\n\nmodule.exports = {\n    reply_to_strings: replyToStrings,\n    reply_to_object: replyToObject,\n    print: print,\n    err_code: /^([A-Z]+)\\s+(.+)$/,\n    monitor_regex: /^[0-9]{10,11}\\.[0-9]+ \\[[0-9]+ .+\\].*\"$/,\n    clone: convenienceClone,\n    callback_or_emit: callbackOrEmit,\n    reply_in_order: replyInOrder\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}