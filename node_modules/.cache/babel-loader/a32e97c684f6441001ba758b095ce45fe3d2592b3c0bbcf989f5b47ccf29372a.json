{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport NameButtons from './nameButtons';\nimport PlayerSection from './playerSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io({\n  autoConnect: false\n});\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = name => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name]);\n    // update player list on peers\n    socket.emit(\"player_join_u\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessageReceived(data.name + \": \" + data.message);\n  };\n  const playerJoinD = data => {\n    setPlayers(previous => [...previous, data.data]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\" + link);\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n      socket.emit(\"increment_score\");\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  };\n  const updateScores = data => {\n    setScores(data);\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container w-60 text-center\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameButtons, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerSection, {\n      name: name,\n      scores: scores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSection,\n        alt: \"\",\n        className: \"vw-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GQ/R+OJ9VSkhUTNXWZkPDAzJb1I=\");\n_c = App;\nexport default App;\n\n/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","NameButtons","PlayerSection","jsxDEV","_jsxDEV","socket","autoConnect","IS_PROD","process","env","NODE_ENV","URL","myGuess","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","imageSection","setImageSection","name","setName","status","setStatus","players","setPlayers","scores","setScores","playerJoin","connect","previous","emit","start","guess","data","console","log","sendMessage","receiveMessage","playerJoinD","getRandomDreamD","dream","dreamer","link","split","join","allGuessed","answer","updateScores","on","off","className","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nimport PlayerSection from './playerSection';\nvar socket = io({ autoConnect: false });\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\n\nvar myGuess = \"\";\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"\");\n  const [imageSection, setImageSection] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [scores, setScores] = useState([]);\n\n  // player come online\n  const playerJoin = (name) => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on user\n    setPlayers(previous => [...previous, name])\n    // update player list on peers\n    socket.emit(\"player_join_u\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    myGuess = data;\n    socket.emit(\"guess\");\n    console.log(\"guesser: \" + name);\n    console.log(\"my guess: \" + myGuess);\n    setStatus(\"guessed\");\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  // socket handlers -----------\n  const receiveMessage = (data) => {\n    setMessageReceived(data.name + \": \" + data.message);\n  }\n\n  const playerJoinD = (data) => {\n    setPlayers(previous => [...previous, data.data])\n  }\n\n  const getRandomDreamD = (data) => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    console.log(\"dreamer: \" + data.dreamer);\n    let link = data.dream.split(\" \").join(\"_\");\n    setImageSection(\"https://image.pollinations.ai/prompt/\"+link);\n  }\n\n  // when all players guessed\n  const allGuessed = (answer) => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n      socket.emit(\"increment_score\");\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess);\n    }\n    setStatus(\"after\");\n  }\n\n  const updateScores = (data) => {\n    setScores(data);\n  }\n\n  // receive from socket\n  useEffect(() => {\n\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"player_join_d\", playerJoinD);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_scores\", updateScores);\n\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App container w-60 text-center\" style={{whiteSpace: `pre-line`}}>\n\n      <br></br>\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <PlayerSection name={name} scores={scores} />\n      <div>\n        <img src={imageSection} alt=\"\" className=\"vw-100\"></img>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}