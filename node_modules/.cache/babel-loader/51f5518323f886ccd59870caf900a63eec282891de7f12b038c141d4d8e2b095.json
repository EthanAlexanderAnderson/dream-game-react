{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\playerSection.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerSection(props) {\n  // TODO: clean this mess\n  let playerSection = [];\n  for (let i = 0; i < props.scores.length; i++) {\n    for (let j = 0; j < props.stats.length; j++) {\n      if (props.scores[i][1] === props.stats[j][0]) {\n        let correct = parseInt(props.stats[j][1]);\n        let incorrect = parseInt(props.stats[j][2]);\n        let ratio = (correct / (incorrect + correct + 0.00001) * 100).toFixed(2);\n        let longestStreak = parseInt(props.stats[j][3]);\n        let skillRating = (ratio * (correct / 10 + longestStreak)).toFixed(0);\n        let temp = props.scores[i];\n        temp[5] = skillRating;\n        playerSection.push(temp);\n      }\n    }\n  }\n  let colThree = \"\";\n  if (props.status === \"before\") {\n    colThree = \"Skill Rating\";\n    // sort by skill rating\n    playerSection.sort((a, b) => b[5] - a[5]);\n  } else if (props.status === \"during\") {\n    colThree = \"Status\";\n    // sort by score\n    playerSection.sort((a, b) => b[2] - a[2]);\n  } else if (props.status === \"after\") {\n    colThree = \"Guessed\";\n    // sort by score\n    playerSection.sort((a, b) => b[2] - a[2]);\n  } else {\n    colThree = \"Status\";\n  }\n  if (!(props.name === \"\")) {\n    if (Array.isArray(playerSection)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerSection\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Player\"\n              }, \"Player\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Scores\"\n              }, \"Scores\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: colThree\n              }, colThree, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, \"Header Row\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: playerSection.map((item, index) => {\n              // show ready (default)\n              let itemThree = item[3];\n              if (props.status === \"after\") {\n                // show status\n                itemThree = item[4];\n              } else if (props.status === \"before\") {\n                // show skill rating\n                itemThree = item[5];\n              }\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item[1]\n                }, item[1] + \"name\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item[2], \" \", item[2] - item[6] !== 0 && props.status === \"after\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"scoreDiff\",\n                    children: [\"+\", item[2] - item[6]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 134\n                  }, this) : null]\n                }, item[1] + \"score\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: itemThree\n                }, item[1] + colThree, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, item[1] + \"Row\", true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ERROR: SCORES NOT ARRAY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    }\n  }\n}\n_c = PlayerSection;\n;\nexport default PlayerSection;\nvar _c;\n$RefreshReg$(_c, \"PlayerSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlayerSection","props","playerSection","i","scores","length","j","stats","correct","parseInt","incorrect","ratio","toFixed","longestStreak","skillRating","temp","push","colThree","status","sort","a","b","name","Array","isArray","id","children","className","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","itemThree","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/playerSection.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerSection(props) {\r\n\r\n    // TODO: clean this mess\r\n    let playerSection = [];\r\n    for (let i = 0; i < props.scores.length; i++) {\r\n        for (let j = 0; j < props.stats.length; j++) {\r\n            if (props.scores[i][1] === props.stats[j][0]){\r\n                let correct  = parseInt(props.stats[j][1]);\r\n                let incorrect = parseInt(props.stats[j][2]);\r\n                let ratio = ((correct/(incorrect+correct+0.00001))*100).toFixed(2);\r\n                let longestStreak = parseInt(props.stats[j][3]);\r\n                let skillRating = (ratio * ((correct/10) + longestStreak)).toFixed(0);\r\n                let temp = props.scores[i];\r\n                temp[5] = skillRating;\r\n                playerSection.push(temp);\r\n            }\r\n        }\r\n    }\r\n\r\n    let colThree = \"\";\r\n    if (props.status === \"before\") {\r\n        colThree = \"Skill Rating\"\r\n        // sort by skill rating\r\n        playerSection.sort((a, b) => b[5] - a[5]);\r\n    } else if (props.status === \"during\") {\r\n        colThree = \"Status\"\r\n        // sort by score\r\n        playerSection.sort((a, b) => b[2] - a[2]);\r\n    } else if (props.status === \"after\") {\r\n        colThree = \"Guessed\"\r\n        // sort by score\r\n        playerSection.sort((a, b) => b[2] - a[2]);\r\n    } else {\r\n        colThree = \"Status\"\r\n    }\r\n\r\n    if (!(props.name === \"\")){\r\n        if (Array.isArray(playerSection)) { \r\n            return (\r\n                <div id=\"playerSection\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr key=\"Header Row\">\r\n                                <th key=\"Player\" scope=\"col\">Player</th>\r\n                                <th key={\"Scores\"} scope=\"col\">Scores</th>\r\n                                <th key={colThree} scope=\"col\">{colThree}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {playerSection.map((item, index) => {\r\n                                // show ready (default)\r\n                                let itemThree = item[3];\r\n                                if (props.status === \"after\") {\r\n                                    // show status\r\n                                    itemThree = item[4];\r\n                                } else if (props.status === \"before\") {\r\n                                    // show skill rating\r\n                                    itemThree = item[5];\r\n                                }\r\n                                return (\r\n                                <tr key={item[1] + \"Row\"}>\r\n                                    <td key={item[1] + \"name\"}>{item[1]}</td>\r\n                                    <td key={item[1] + \"score\"}>{item[2]} {((item[2] - item[6]) !== 0 && props.status === \"after\") ? <span className=\"scoreDiff\">+{item[2] - item[6]}</span> : null}</td>\r\n                                    <td key={item[1] + colThree }>{itemThree}</td>\r\n                                </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(<p>ERROR: SCORES NOT ARRAY</p>);\r\n        }\r\n    }\r\n};\r\nexport default PlayerSection;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAE1B;EACA,IAAIC,aAAa,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC1C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,KAAK,CAACF,MAAM,EAAEC,CAAC,EAAE,EAAE;MACzC,IAAIL,KAAK,CAACG,MAAM,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKF,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;QACzC,IAAIE,OAAO,GAAIC,QAAQ,CAACR,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAII,SAAS,GAAGD,QAAQ,CAACR,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAIK,KAAK,GAAG,CAAEH,OAAO,IAAEE,SAAS,GAACF,OAAO,GAAC,OAAO,CAAC,GAAE,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC;QAClE,IAAIC,aAAa,GAAGJ,QAAQ,CAACR,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAIQ,WAAW,GAAG,CAACH,KAAK,IAAKH,OAAO,GAAC,EAAE,GAAIK,aAAa,CAAC,EAAED,OAAO,CAAC,CAAC,CAAC;QACrE,IAAIG,IAAI,GAAGd,KAAK,CAACG,MAAM,CAACD,CAAC,CAAC;QAC1BY,IAAI,CAAC,CAAC,CAAC,GAAGD,WAAW;QACrBZ,aAAa,CAACc,IAAI,CAACD,IAAI,CAAC;MAC5B;IACJ;EACJ;EAEA,IAAIE,QAAQ,GAAG,EAAE;EACjB,IAAIhB,KAAK,CAACiB,MAAM,KAAK,QAAQ,EAAE;IAC3BD,QAAQ,GAAG,cAAc;IACzB;IACAf,aAAa,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,MAAM,IAAInB,KAAK,CAACiB,MAAM,KAAK,QAAQ,EAAE;IAClCD,QAAQ,GAAG,QAAQ;IACnB;IACAf,aAAa,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,MAAM,IAAInB,KAAK,CAACiB,MAAM,KAAK,OAAO,EAAE;IACjCD,QAAQ,GAAG,SAAS;IACpB;IACAf,aAAa,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,MAAM;IACHH,QAAQ,GAAG,QAAQ;EACvB;EAEA,IAAI,EAAEhB,KAAK,CAACqB,IAAI,KAAK,EAAE,CAAC,EAAC;IACrB,IAAIC,KAAK,CAACC,OAAO,CAACtB,aAAa,CAAC,EAAE;MAC9B,oBACIH,OAAA;QAAK0B,EAAE,EAAC,eAAe;QAAAC,QAAA,eACnB3B,OAAA;UAAO4B,SAAS,EAAC,OAAO;UAAAD,QAAA,gBACpB3B,OAAA;YAAA2B,QAAA,eACI3B,OAAA;cAAA2B,QAAA,gBACI3B,OAAA;gBAAiB6B,KAAK,EAAC,KAAK;gBAAAF,QAAA,EAAC;cAAM,GAA3B,QAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuB,CAAC,eACxCjC,OAAA;gBAAmB6B,KAAK,EAAC,KAAK;gBAAAF,QAAA,EAAC;cAAM,GAA5B,QAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC,eAC1CjC,OAAA;gBAAmB6B,KAAK,EAAC,KAAK;gBAAAF,QAAA,EAAET;cAAQ,GAA/BA,QAAQ;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA4B,CAAC;YAAA,GAH1C,YAAY;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIhB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRjC,OAAA;YAAA2B,QAAA,EACKxB,aAAa,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;cAChC;cACA,IAAIC,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;cACvB,IAAIjC,KAAK,CAACiB,MAAM,KAAK,OAAO,EAAE;gBAC1B;gBACAkB,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;cACvB,CAAC,MAAM,IAAIjC,KAAK,CAACiB,MAAM,KAAK,QAAQ,EAAE;gBAClC;gBACAkB,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;cACvB;cACA,oBACAnC,OAAA;gBAAA2B,QAAA,gBACI3B,OAAA;kBAAA2B,QAAA,EAA4BQ,IAAI,CAAC,CAAC;gBAAC,GAA1BA,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAe,CAAC,eACzCjC,OAAA;kBAAA2B,QAAA,GAA6BQ,IAAI,CAAC,CAAC,CAAC,EAAC,GAAC,EAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,KAAM,CAAC,IAAIjC,KAAK,CAACiB,MAAM,KAAK,OAAO,gBAAInB,OAAA;oBAAM4B,SAAS,EAAC,WAAW;oBAAAD,QAAA,GAAC,GAAC,EAACQ,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;kBAAA;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,GAAG,IAAI;gBAAA,GAAtJE,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA0I,CAAC,eACrKjC,OAAA;kBAAA2B,QAAA,EAA+BU;gBAAS,GAA/BF,IAAI,CAAC,CAAC,CAAC,GAAGjB,QAAQ;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAkB,CAAC;cAAA,GAHzCE,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIpB,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAEd,CAAC,MAAM;MACH,oBAAOjC,OAAA;QAAA2B,QAAA,EAAG;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACzC;EACJ;AACJ;AAACK,EAAA,GA3EQrC,aAAa;AA2ErB;AACD,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}