{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileSection(props){var stats=[];var labels=[\"Name: \",\"Skill Rating: \",\"Correct: \",\"Incorrect: \",\"Ratio: \",\"Longest Streak: \",\"Memory: \",\"Gnome Count: \"];for(var i=0;i<props.stats.length;i++){if(props.stats[i][0]===props.name){var correct=parseInt(props.stats[i][1]);var incorrect=parseInt(props.stats[i][2]);var ratio=(correct/(incorrect+correct+0.00001)*100).toFixed(2);var longestStreak=parseInt(props.stats[i][3]);var skillRating=(ratio*(correct/10+longestStreak)).toFixed(0);var correctMemory=parseInt(props.stats[i][5]);var incorrectMemory=parseInt(props.stats[i][6]);var memory=(correctMemory/(correctMemory+incorrectMemory+0.001)*100).toFixed(2);stats.push(props.stats[i][0]);// name\nstats.push(skillRating);stats.push(correct);stats.push(incorrect);stats.push(ratio+\"%\");stats.push(longestStreak);stats.push(memory+\"%\");stats.push(props.stats[i][4]);//\n}}if(props.name!==\"\"){return/*#__PURE__*/_jsxs(\"div\",{id:\"profileSection\",className:\"col-sm-3 order-3\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"STATS WILL NOT BE SAVED UNTIL THE END OF ALPHA TESTS\"}),stats.map(function(item,index){return/*#__PURE__*/_jsxs(\"li\",{className:\"mod\"+index%2,children:[labels[index],item]},index);})]});}};export default ProfileSection;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ProfileSection","props","stats","labels","i","length","name","correct","parseInt","incorrect","ratio","toFixed","longestStreak","skillRating","correctMemory","incorrectMemory","memory","push","id","className","children","map","item","index"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/profileSection.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction ProfileSection(props) {\r\n\r\n    let stats = [];\r\n    let labels = [\"Name: \", \"Skill Rating: \", \"Correct: \", \"Incorrect: \", \"Ratio: \", \"Longest Streak: \", \"Memory: \", \"Gnome Count: \"]\r\n\r\n    for (let i = 0; i < props.stats.length; i++) {\r\n        if (props.stats[i][0] === props.name){\r\n            \r\n            let correct  = parseInt(props.stats[i][1]);\r\n            let incorrect = parseInt(props.stats[i][2]);\r\n            let ratio = ((correct/(incorrect+correct+0.00001))*100).toFixed(2);\r\n            let longestStreak = parseInt(props.stats[i][3]);\r\n            let skillRating = (ratio * ((correct/10) + longestStreak)).toFixed(0);\r\n            let correctMemory  = parseInt(props.stats[i][5]);\r\n            let incorrectMemory = parseInt(props.stats[i][6]);\r\n            let memory = ((correctMemory/(correctMemory+incorrectMemory+0.001))*100).toFixed(2);\r\n\r\n            stats.push(props.stats[i][0]);// name\r\n            stats.push(skillRating);\r\n            stats.push(correct);\r\n            stats.push(incorrect);\r\n            stats.push(ratio+\"%\");\r\n            stats.push(longestStreak);\r\n            stats.push(memory+\"%\");\r\n            stats.push(props.stats[i][4]); //\r\n        }\r\n    }\r\n\r\n    if (props.name !== \"\") {\r\n        return (\r\n            <div id=\"profileSection\" className='col-sm-3 order-3'>\r\n                <p>STATS WILL NOT BE SAVED UNTIL THE END OF ALPHA TESTS</p>\r\n                {stats.map((item, index) => (\r\n                    <li key={index} className={\"mod\"+index%2}>{labels[index]}{item}</li>\r\n                ))}\r\n            </div>\r\n        );\r\n        }\r\n};\r\nexport default ProfileSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}