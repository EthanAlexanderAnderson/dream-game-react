{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport { useEffect, useState } from \"react\";\nimport ButtonSection from './buttonSection';\nimport PlayerSection from './playerSection';\nimport ImageSection from './imageSection';\nimport MessageSection from './messageSection';\nimport ProfileSection from './profileSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket = io({\n  autoConnect: false\n});\nconst IS_PROD = process.env.NODE_ENV === \"production\";\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\nvar myGuess = \"\";\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [textSection, setTextSection] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"before\");\n  const [records, setRecords] = useState([]);\n\n  // player come online\n  const playerJoin = name => {\n    // connect to server\n    socket = io.connect(URL);\n    // set name on user\n    setName(name);\n    // update player list on peers\n    socket.emit(\"player_join\", name);\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    myGuess = data;\n    socket.emit(\"guess\", myGuess);\n    setStatus(\"guessed\");\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n\n  // socket handlers -----------\n  const receiveMessage = data => {\n    setMessages(previous => [...previous, data.name + \": \" + data.message]);\n  };\n  const getRandomDreamD = data => {\n    setTextSection(data.dream);\n    setStatus(\"during\");\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\n  };\n\n  // when all players guessed\n  const allGuessed = answer => {\n    if (answer === myGuess) {\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\n      socket.emit(\"increment_score\");\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\n    }\n    setStatus(\"after\");\n    setImage(\"\");\n    setTimeout(start, 5000);\n  };\n  const updateRecords = data => {\n    setRecords(data);\n  };\n  const readyUp = data => {\n    let temp = records;\n    temp[data][3] = \"Ready\";\n    setRecords(temp);\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", receiveMessage);\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\n    socket.on(\"all_guessed\", allGuessed);\n    socket.on(\"update_records\", updateRecords);\n    socket.on(\"ready_up\", readyUp);\n    return () => {\n      socket.off(\"receive_message\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"all_guessed\");\n      socket.off(\"update_records\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container row mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col  order-sm-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textSection\",\n        children: textSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonSection, {\n        name: name,\n        playerJoin: playerJoin,\n        status: status,\n        start: start,\n        guess: guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerSection, {\n        name: name,\n        records: records,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageSection, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageSection, {\n      name: name,\n      setMessage: setMessage,\n      sendMessage: sendMessage,\n      message: message,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileSection, {\n      name: name,\n      records: records\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eJoV9Kd1Ym+9i2cfc/ZRmUbajng=\");\n_c = App;\nexport default App;\n\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","ButtonSection","PlayerSection","ImageSection","MessageSection","ProfileSection","jsxDEV","_jsxDEV","socket","autoConnect","IS_PROD","process","env","NODE_ENV","URL","myGuess","App","_s","message","setMessage","messages","setMessages","textSection","setTextSection","image","setImage","name","setName","status","setStatus","records","setRecords","playerJoin","connect","emit","start","guess","data","sendMessage","receiveMessage","previous","getRandomDreamD","dream","split","join","replace","allGuessed","answer","setTimeout","updateRecords","readyUp","temp","on","off","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/App.js"],"sourcesContent":["import io from 'socket.io-client'\r\nimport { useEffect, useState} from \"react\";\r\nimport ButtonSection from './buttonSection';\r\nimport PlayerSection from './playerSection';\r\nimport ImageSection from './imageSection';\r\nimport MessageSection from './messageSection';\r\nimport ProfileSection from './profileSection';\r\nvar socket = io({ autoConnect: false });\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\nconst URL = IS_PROD ? \"http://www.ethananderson.ca/\" : \"http://localhost:3001\";\r\n\r\nvar myGuess = \"\";\r\n\r\nfunction App() {\r\n  // states\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [textSection, setTextSection] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"before\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // player come online\r\n  const playerJoin = (name) => {\r\n    // connect to server\r\n    socket = io.connect(URL);\r\n    // set name on user\r\n    setName(name);\r\n    // update player list on peers\r\n    socket.emit(\"player_join\", name);\r\n  };\r\n\r\n  // start round\r\n  const start = () => {\r\n    socket.emit(\"get_random_dream_u\");\r\n  };\r\n\r\n  // player guesses\r\n  const guess = (data) => {\r\n    myGuess = data;\r\n    socket.emit(\"guess\", myGuess);\r\n    setStatus(\"guessed\");\r\n  }\r\n\r\n  // send message to socket\r\n  const sendMessage = () => {\r\n    socket.emit(\"send_message\", { message, name });\r\n  }\r\n\r\n  // socket handlers -----------\r\n  const receiveMessage = (data) => {\r\n    setMessages(previous => [...previous, (data.name + \": \" + data.message)]);\r\n  }\r\n\r\n  const getRandomDreamD = (data) => {\r\n    setTextSection(data.dream);\r\n    setStatus(\"during\");\r\n    setImage(data.dream.split(\" \").join(\"_\").replace(/[ &?]/g, \"\"));\r\n  }\r\n\r\n  // when all players guessed\r\n  const allGuessed = (answer) => {\r\n    if (answer === myGuess) {\r\n      setTextSection(\"CORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\r\n      socket.emit(\"increment_score\");\r\n    } else {\r\n      setTextSection(\"INCORRECT\\nANSWER: \" + answer + \"\\nYou guessed: \" + myGuess + \"\\nNext round starts in 5 seconds...\");\r\n    }\r\n    setStatus(\"after\");\r\n    setImage(\"\");\r\n    setTimeout(start, 5000);\r\n  }\r\n\r\n  const updateRecords = (data) => {\r\n    setRecords(data);\r\n  }\r\n\r\n  const readyUp = (data) => {\r\n    let temp = records;\r\n    temp[data][3] = \"Ready\";\r\n    setRecords(temp);\r\n  }\r\n\r\n  // receive from socket\r\n  useEffect(() => {\r\n\r\n    socket.on(\"receive_message\", receiveMessage);\r\n    socket.on(\"get_random_dream_d\", getRandomDreamD);\r\n    socket.on(\"all_guessed\", allGuessed);\r\n    socket.on(\"update_records\", updateRecords);\r\n    socket.on(\"ready_up\", readyUp);\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n      socket.off(\"get_random_dream_d\");\r\n      socket.off(\"all_guessed\");\r\n      socket.off(\"update_records\");\r\n\r\n    };\r\n\r\n  }, [socket]);\r\n\r\n  // display\r\n  return (\r\n    <div className=\"App container row mx-auto\">\r\n      \r\n      <div className='col  order-sm-2'>\r\n        <div id='textSection'>{textSection}</div>\r\n        <ButtonSection name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\r\n\r\n        <PlayerSection name={name} records={records} status={status}/>\r\n\r\n        <ImageSection image={image}/>\r\n\r\n      </div>\r\n\r\n      <MessageSection name={name} setMessage={setMessage} sendMessage={sendMessage} message={message} messages={messages}/>\r\n\r\n      <ProfileSection name={name} records={records}/>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n      <h1>Players:</h1>\r\n      <div>\r\n        {players.map(item => {\r\n          return <div>{item}</div>;\r\n        })}\r\n      </div>\r\n\r\n      <input \r\n        placeholder=\"Message...\" \r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={sendMessage}> Send Message</button>\r\n\r\n      <h1>Message:</h1>\r\n      {messageReceived}\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}