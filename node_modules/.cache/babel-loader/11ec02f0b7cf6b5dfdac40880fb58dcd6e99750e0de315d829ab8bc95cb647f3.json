{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\src\\\\playerSection.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerSection(props) {\n  let playerSection = [];\n  let records = props.records;\n  /*\r\n  for (let i = 0; i < records.length; i++) {\r\n        // TODO move this calc to server\r\n      \r\n      let correct  = parseInt(records[i][5]);\r\n      let incorrect = parseInt(records[i][6]);\r\n      let ratio = ((correct/(incorrect+correct+0.001))*100).toFixed(2);\r\n      let longestStreak = parseInt(records[i][7]);\r\n      let skillRating = (ratio * ((correct/10) + longestStreak)).toFixed(0);\r\n      let temp = records[i];\r\n      temp.push(skillRating);\r\n      playerSection.push(temp);\r\n    }\r\n  */\n\n  let colThree = \"\";\n  if (props.status === \"before\") {\n    colThree = \"Skill Rating\";\n    // sort by skill rating\n    playerSection.sort((a, b) => b[11] - a[11]);\n  } else if (props.status === \"during\") {\n    colThree = \"Status\";\n    // sort by score\n    playerSection.sort((a, b) => b[1] - a[1]);\n  } else if (props.status === \"after\") {\n    colThree = \"Guessed\";\n    // sort by score\n    playerSection.sort((a, b) => b[1] - a[1]);\n  } else {\n    colThree = \"Status\";\n  }\n  if (!(props.name === \"\")) {\n    if (Array.isArray(playerSection)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerSection\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Player\"\n              }, \"Player\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Scores\"\n              }, \"Scores\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: colThree\n              }, colThree, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)]\n            }, \"Header Row\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: playerSection.map((item, index) => {\n              // show score (default)\n              let itemThree = item[1];\n              if (props.status === \"after\") {\n                // show status\n                itemThree = item[3];\n              } else if (props.status === \"before\") {\n                // show skill rating\n                itemThree = item[11];\n              }\n              if (item[3] !== \"null\") {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  scope: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item[0]\n                  }, item[0] + \"name\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item[1]\n                  }, item[0] + \"score\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: itemThree\n                  }, item[0] + colThree, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this)]\n                }, item[1] + \"Row\", true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 33\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ERROR: RECORDS NOT ARRAY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this);\n    }\n  }\n}\n_c = PlayerSection;\n;\nexport default PlayerSection;\nvar _c;\n$RefreshReg$(_c, \"PlayerSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlayerSection","props","playerSection","records","colThree","status","sort","a","b","name","Array","isArray","id","children","className","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","itemThree","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/src/playerSection.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerSection(props) {\r\n\r\n    let playerSection = [];\r\n    let records = props.records;\r\n    /*\r\n    for (let i = 0; i < records.length; i++) {\r\n\r\n        // TODO move this calc to server\r\n        \r\n        let correct  = parseInt(records[i][5]);\r\n        let incorrect = parseInt(records[i][6]);\r\n        let ratio = ((correct/(incorrect+correct+0.001))*100).toFixed(2);\r\n        let longestStreak = parseInt(records[i][7]);\r\n        let skillRating = (ratio * ((correct/10) + longestStreak)).toFixed(0);\r\n        let temp = records[i];\r\n        temp.push(skillRating);\r\n        playerSection.push(temp);\r\n\r\n    }\r\n    */\r\n\r\n    let colThree = \"\";\r\n    if (props.status === \"before\") {\r\n        colThree = \"Skill Rating\"\r\n        // sort by skill rating\r\n        playerSection.sort((a, b) => b[11] - a[11]);\r\n    } else if (props.status === \"during\") {\r\n        colThree = \"Status\"\r\n        // sort by score\r\n        playerSection.sort((a, b) => b[1] - a[1]);\r\n    } else if (props.status === \"after\") {\r\n        colThree = \"Guessed\"\r\n        // sort by score\r\n        playerSection.sort((a, b) => b[1] - a[1]);\r\n    } else {\r\n        colThree = \"Status\"\r\n    }\r\n\r\n    if (!(props.name === \"\")){\r\n        if (Array.isArray(playerSection)) { \r\n            return (\r\n                <div id=\"playerSection\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr key=\"Header Row\">\r\n                                <th key=\"Player\" scope=\"col\">Player</th>\r\n                                <th key={\"Scores\"} scope=\"col\">Scores</th>\r\n                                <th key={colThree} scope=\"col\">{colThree}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {playerSection.map((item, index) => {\r\n                                // show score (default)\r\n                                let itemThree = item[1];\r\n                                if (props.status === \"after\") {\r\n                                    // show status\r\n                                    itemThree = item[3];\r\n                                } else if (props.status === \"before\") {\r\n                                    // show skill rating\r\n                                    itemThree = item[11];\r\n                                }\r\n                                if (item[3] !== \"null\"){\r\n                                return (\r\n                                <tr key={item[1] + \"Row\"} scope=\"row\">\r\n                                    <td key={item[0] + \"name\"}>{item[0]}</td>\r\n                                    <td key={item[0] + \"score\"}>{item[1]}</td>\r\n                                    <td key={item[0] + colThree }>{itemThree}</td>\r\n                                </tr>\r\n                                );}\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(<p>ERROR: RECORDS NOT ARRAY</p>);\r\n        }\r\n    }\r\n};\r\nexport default PlayerSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}