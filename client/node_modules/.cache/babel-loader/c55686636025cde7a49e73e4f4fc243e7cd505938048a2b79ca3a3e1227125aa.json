{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\Dream Game Site\\\\v4\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport io from 'socket.io-client';\n//import Buffer from 'buffer';\n//import Crypto from 'crypto';\n//import Redis from 'redis';\nimport { useEffect, useState } from \"react\";\nimport NameButtons from './nameButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [myGuess, setMyGuess] = useState(\"\");\n  const [guessed, setGuessed] = useState([]);\n  const [dreamer, setDreamer] = useState(\"\");\n\n  // player come online\n  const playerJoin = data => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data]);\n    // update player list on peers\n    socket.emit(\"player_join_u\", {\n      data\n    });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = data => {\n    socket.emit(\"guess_u\", name);\n  };\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      name\n    });\n  };\n  const finishRound = () => {\n    console.log(dreamer);\n    if (myGuess === dreamer) {\n      setTextSection(\"CORRECT\\nANSWER: \" + dreamer);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + dreamer);\n    }\n    setStatus(\"after\");\n  };\n\n  // receive from socket\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      var message = data.message;\n      var name = data.name;\n      setMessageReceived(name + \": \" + message);\n    });\n    socket.on(\"player_join_d\", data => {\n      setPlayers(previous => [...previous, data.data]);\n    });\n    socket.on(\"get_random_dream_d\", data => {\n      setTextSection(data.dream);\n      setStatus(\"during\");\n      setDreamer(data.dreamer);\n    });\n    socket.on(\"guess_d\", data => {\n      setGuessed(previous => [...previous, data]);\n      console.log(\"guessed: \" + data);\n    });\n    socket.on(\"all_guessed\", data => {\n      finishRound();\n    });\n    return () => {\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"guess_d\");\n      socket.off(\"all_guessed\");\n    };\n  }, [socket]);\n\n  // display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      whiteSpace: `pre-line`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameButtons, {\n      name: name,\n      playerJoin: playerJoin,\n      status: status,\n      start: start,\n      guess: guess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: players.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dreamer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"78Sa5BHrK7KR7xkTR92JoxW7fz4=\");\n_c = App;\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","NameButtons","jsxDEV","_jsxDEV","socket","connect","App","_s","message","setMessage","messageReceived","setMessageReceived","textSection","setTextSection","name","setName","status","setStatus","players","setPlayers","myGuess","setMyGuess","guessed","setGuessed","dreamer","setDreamer","playerJoin","data","previous","emit","start","guess","sendMessage","finishRound","console","log","on","dream","off","className","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/Users/Ethan/Desktop/Dream Game Site/v4/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client'\n//import Buffer from 'buffer';\n//import Crypto from 'crypto';\n//import Redis from 'redis';\nimport { useEffect, useState} from \"react\";\nimport NameButtons from './nameButtons';\nconst socket = io.connect(\"http://localhost:3001\")\n\nfunction App() {\n  // states\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const [textSection, setTextSection] = useState(\"Welcome to Dream Game.\\nPlease select your name:\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [myGuess, setMyGuess] = useState(\"\");\n  const [guessed, setGuessed] = useState([]);\n  const [dreamer, setDreamer] = useState(\"\");\n\n  // player come online\n  const playerJoin = (data) => {\n    // set name on user\n    setName(data);\n    // update player list on user\n    setPlayers(previous => [...previous, data])\n    // update player list on peers\n    socket.emit(\"player_join_u\", { data });\n  };\n\n  // start round\n  const start = () => {\n    socket.emit(\"get_random_dream_u\");\n  };\n\n  // player guesses\n  const guess = (data) => {\n    socket.emit(\"guess_u\", name);\n  }\n\n  // send message to socket\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, name });\n  }\n\n  const finishRound = () => {\n    console.log(dreamer);\n    if (myGuess === dreamer) {\n      setTextSection(\"CORRECT\\nANSWER: \" + dreamer);\n    } else {\n      setTextSection(\"INCORRECT\\nANSWER: \" + dreamer);\n    }\n    setStatus(\"after\");\n  }\n\n  // receive from socket\n  useEffect(() => {\n\n    socket.on(\"receive_message\", (data) => {\n      var message = data.message;\n      var name = data.name;\n      setMessageReceived(name + \": \" + message);\n    });\n\n    socket.on(\"player_join_d\", (data) => {\n      setPlayers(previous => [...previous, data.data])\n    });\n\n    socket.on(\"get_random_dream_d\", (data) => {\n      setTextSection(data.dream);\n      setStatus(\"during\");\n      setDreamer(data.dreamer);\n    });\n\n    socket.on(\"guess_d\", (data) => {\n      setGuessed(previous => [...previous, data]);\n      console.log(\"guessed: \" + data);\n      \n    });\n\n    socket.on(\"all_guessed\", (data) => {\n      finishRound();\n    });\n\n    return () => {\n      socket.off(\"player_join_d\");\n      socket.off(\"get_random_dream_d\");\n      socket.off(\"guess_d\");\n      socket.off(\"all_guessed\");\n    };\n\n  }, [socket]);\n\n  // display\n  return (\n    <div className=\"App\" style={{whiteSpace: `pre-line`}}>\n\n      <h1>Name: {name}</h1>\n      <br></br>\n\n      <p>{textSection}</p>\n      <NameButtons name={name} playerJoin={playerJoin} status={status} start={start} guess={guess}/>\n      <br></br>\n\n      <h1>Players:</h1>\n      <div>\n        {players.map(item => {\n          return <div>{item}</div>;\n        })}\n      </div>\n      <h1>{dreamer}</h1>\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n      <input \n        placeholder=\"Message...\" \n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n\n      <h1>Message:</h1>\n      {messageReceived}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}